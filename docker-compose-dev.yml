version: "3"

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: main_rest_service
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin

  frontend:
    image: node:8
    working_dir: /app
    volumes:
      - "./app/frontend:/app"
    command: /bin/sh -c "npm install && npm install -g @angular/cli && ng serve --host 0.0.0.0"
    ports:
      - "4200:4200"

  django:
    build:
      context: .
      dockerfile: Dockerfile.Python3
    working_dir: /app
    volumes:
      - "./app/main_rest_service:/app"
    command: /bin/sh -c "pip3 install -r requirements.txt && python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:3000"
    depends_on:
      - db
      - redis
    ports:
      - "3000:3000"
    environment:
      - 'SECRET=$sc7z*$mub!&n6ppy6x&c$irlk84=#5i-7jqm)xyj@=qd=nnf1'

  device:
    image: pypy:3.6
    working_dir: /app
    volumes:
      - "./app/device_microservice:/app"
    command: /bin/sh -c "pip install -r requirements.txt && alembic upgrade head && gunicorn -b 0.0.0.0:8080 main:app -w 4 -k uvicorn.workers.UvicornH11Worker"
    environment:
      - 'REDIS_HOST=redis'
      - 'REDIS_PORT=6379'
      - 'DATABASE_URL=sqlite:///./test.db'
      - 'SECRET=$sc7z*$mub!&n6ppy6x&c$irlk84=#5i-7jqm)xyj@=qd=nnf1'
    depends_on:
      - redis
    ports:
      - "8080:8080"


  redis:
    image: redis:latest
    expose:
      - 6379